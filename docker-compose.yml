version: "3.4"

services:
  app:
    image: ${IMAGES_PREFIX:-}app
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
        test: ["CMD", "env", "-i", "REQUEST_METHOD=GET", "SCRIPT_NAME=/ping", "SCRIPT_FILENAME=/ping", "cgi-fcgi", "-bind", "-connect", "/var/run/php/php-fpm.sock"]
        retries: 3
        timeout: 5s

  caddy:
    image: ${IMAGES_PREFIX:-}caddy
    depends_on:
      app:
        condition: service_healthy
        restart: true
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, caddy:80
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  pgsql:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${DB_DATABASE:-sgasdb}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${DB_USERNAME:-sgas}
    volumes:
      - db_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    healthcheck:
        test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE:-sgasdb}", "-U", "${DB_USERNAME:-sgas}"]
        retries: 3
        timeout: 5s

volumes:
  php_socket:
  caddy_data:
  caddy_config:
  db_data: